"use strict";function _asyncToGenerator(a){return function(){var b=a.apply(this,arguments);return new Promise(function(a,c){function d(e,f){try{var g=b[e](f),h=g.value}catch(a){return void c(a)}return g.done?void a(h):Promise.resolve(h).then(function(a){d("next",a)},function(a){d("throw",a)})}return d("next")})}}const accordion=document.querySelector(".accordion"),filterGroup=document.querySelector("#filterGroup"),getClass=a=>"POST"===a?"card-field_success":"PUT"===a?"card-field_info":"PATCH"===a?"card-field_warning":"DELETE"===a?"card-field_danger":"card-field_primary",getBackroundColor=a=>"POST"===a?"#17C671":"PUT"===a?"#00B8D8":"PATCH"===a?"#FFB400":"DELETE"===a?"#C4183C":"#007BFF",createUnique=()=>Math.random().toString(36).substr(2,16),createListener=()=>{const a=document.querySelectorAll(".card-row_data");a.forEach(a=>{a.addEventListener("click",()=>{a.scrollIntoView({block:"start",behavior:"smooth"})},!1)}),hljs.initHighlightingOnLoad(),new ClipboardJS("[data-clipboard-target]")},createGroup=a=>"\n    <div class=\"card-row card-row_group\" id=\""+(createUnique()+"\">\n      <div class=\"card-field\">\n        <div class=\"card-field_name\">Group ")+(a+"</div>\n      </div>\n    </div>\n  "),createRequest=(a,b)=>("\n    axios\n----- .get('"+(b.endpoint+b.path+a.route+"', {\n-----   data: {}\n----- })\n----- .then(res => {\n-----   console.log(res)\n----- })\n  ")).replace(/-----/g,"").trim(),createField=(a,b,c,d)=>"\n    <div class=\"card-row card-row_data\" id=\""+(createUnique()+"\">\n      <div class=\"card-field\" data-toggle=\"collapse\" data-target=\"#collapse-")+(c+"-")+(d+"\" aria-expanded=\"true\" aria-controls=\"collapse-")+(c+"-")+(d+"\">\n        <div class=\"card-field_name\">")+(a.name+"</div>\n        <div class=\"card-field_route\">")+(b.path+a.route+"</div>\n        <div class=\"card-field_description\">")+(a.description+"</div>\n        <div class=\"card-field_method ")+(getClass(a.method)+"\">")+(a.method+"</div>\n      </div>\n      <div id=\"collapse-")+(c+"-")+(d+"\" class=\"collapse\" aria-labelledby=\"heading-")+(c+"-")+(d+"\" data-parent=\"#accordion\">\n        <div class=\"collapse-inner\">\n          <div class=\"content-left\">\n            <div class=\"content-title\">\n              <span style=\"background-color: ")+(getBackroundColor(a.method)+";\">")+(a.method+"</span>\n              ")+(a.name+"\n            </div>\n            <div class=\"content-description\">\n              ")+(a.description+"\n            </div>\n            <div class=\"content-route\">\n              <div id=\"route-path-")+(c+"-")+(d+"\">\n                ")+(b.endpoint+b.path+a.route+"\n              </div>\n              <button class=\"btn btn-default\" data-clipboard-target=\"#route-path-")+(c+"-")+(d+"\">Copy</button>\n            </div>\n            <div class=\"content-description\">\n              Example Request\n            </div>\n            <div class=\"content-route\">\n              <div id=\"request-")+(c+"-")+(d+"\">\n                <pre><code class=\"javascript\">")+(createRequest(a,b)+"</code></pre>\n              </div>\n              <button class=\"btn btn-default\" data-clipboard-target=\"#request-")+(c+"-")+(d+"\">Copy</button>\n            </div>\n          </div>\n          <div class=\"content-right\">\n            <div class=\"content-code\">Response</div>\n            <pre><code class=\"json\">")+(JSON.stringify(a.response,!1,4)+"</code></pre>\n          </div>\n        </div>\n      </div>\n    </div>\n  "),getConfig=(()=>{var a=_asyncToGenerator(function*(){return yield fetch("data/config.json").then(function(a){return a.json()})});return function(){return a.apply(this,arguments)}})(),generate=(()=>{var a=_asyncToGenerator(function*(){const a=yield getConfig();yield fetch("data/routes.json").then(function(a){return a.json()}).then(function(b){const c=[],d=[];Object.keys(b).map(function(e){c.push(createGroup(b[e].group)),d.push("<option value=\""+(e+"")+"\">Group "+(e+"")+"</option>"),b[e].routes&&b[e].routes.map(function(b,d){c.push(createField(b,a,e,d))})}),accordion.insertAdjacentHTML("beforeEnd",c.join("\n")),filterGroup.insertAdjacentHTML("beforeEnd",d.join("\n")),createListener()})});return function(){return a.apply(this,arguments)}})();generate();